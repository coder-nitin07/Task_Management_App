

A.)Core Requirements
	- User Registration: Create an endpoint for users to sign up with a username, email, and password.
	- User Login: Create an endpoint for users to log in and receive a JWT token.
	- User Logout: Create an endpoint to invalidate the JWT token and log out the user.
	- Get User Profile: Create an endpoint to retrieve the authenticated user's profile information.
	- Role-Based Access Control (RBAC): Implement RBAC with three roles (Admin, Manager, User) and enforce access control on endpoints.
	-Task Management: Create endpoints for CRUD (Create, Read, Update, Delete) operations on tasks.

B.)Advanced Features (Bonus Points)
	- Real-Time Updates: Implement WebSockets for real-time updates on task changes.
	- Analytics: Create endpoints for basic analytics on task completion statistics.
	- Caching: Implement caching using Redis for frequently accessed endpoints.
	- Rate Limiting: Apply rate limiting to protect the API from abuse.
	- Search and Filtering: Implement search and filtering for tasks based on various criteria.

C.) Documentation and Deployment
	- API Documentation: Document the API using OpenAPI Specification (OAS) version 3.0.
	- Interactive Docs: Provide a link to the Swagger UI or ReDoc page.
	- Deployment: Optionally deploy the API to a cloud provider (e.g., Heroku, AWS, GCP).

D.) General Requirements
	- Code Quality: Ensure the code is well-structured, modular, and maintainable.
	- Error Handling: Implement proper error handling and validation for all endpoints.
	- Testing: Test the API thoroughly to ensure it meets all requirements.










  backend-task folder name and in the folder the structcure is -
    /config
    /controllers
    /models
    /routes
    /middleware
    /utils
  app.js